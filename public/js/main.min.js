"use strict"; const body = document.querySelector("body"), KEY_ESC = 27, mobileSearchWrap = document.querySelector("#mobileSearchWrap"), mobileSearchBtn = document.querySelector("#searchBtn"), elWithScrollX = document.querySelector(".sections-list"), mainCarousel = document.querySelector("#mainCarousel"), reviews = document.querySelector("#reviews"), slider = document.querySelector("#slider"), mainBg = document.querySelector(".main-bg"), footer = document.querySelector(".footer"), up = document.querySelector("#up"), upBtn = document.querySelector("#upBtn"), forms = document.querySelectorAll(".form"), bgModal = document.querySelector("#shading"), faqModal = document.querySelector("#faqModal"), closeFaqBtns = document.querySelectorAll(".close-faq-btn"), application = document.querySelector("#application"), applicationForm = document.querySelector("#applicationForm"), applicationModal = document.querySelector("#applicationModal"), applicationThanks = document.querySelector("#applicationThanks"), order = document.querySelector("#order"), orderForm = document.querySelector("#orderForm"), orderQuantityInput = document.querySelector("#orderQuantity"), incQuantityBtn = document.querySelector("#incQuantity"), decQuantityBtn = document.querySelector("#decQuantity"), orderPrice = document.querySelector("#orderPrice"), orderBtns = document.querySelectorAll(".product-card__btn"), faqForm = document.querySelector("#faqForm"), faqFormBtn = document.querySelector("#faqFormBtn"), dropdownWraps = document.querySelectorAll(".dropdown-wrap"), mobileMenu = document.querySelector("#mobileNav"), mobileMenuOpenBtn = document.querySelector("#burgerBtn"), mobileMenuCloseBtn = document.querySelector("#mobileMenuClose"), closeBtn = document.querySelectorAll(".close-btn"), callbackFormModal = document.querySelector("#callbackFormModal"), callbackForm = document.querySelector("#callbackForm"), callbackClose = document.querySelectorAll(".callback-close"), callbackOpenBtn = document.querySelector("#callbackBtn"), sensitivity = 20; let touchStart = null, touchPosition = null; const regTel = /^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{5,10}$/, regMail = /^([a-z0-9_-]+\.)*[a-z0-9_-]+@[a-z0-9_-]+(\.[a-z0-9_-]+)*\.[a-z]{2,6}$/; mobileSearchBtn.addEventListener("click", showSearch), window.addEventListener("scroll", changePosition), window.addEventListener("scroll", showUp), upBtn.addEventListener("click", goUp); let timeOut; function goUp() { 0 < Math.max(document.body.scrollTop, document.documentElement.scrollTop) ? (window.scrollBy(0, -150), timeOut = setTimeout("goUp()", 5)) : clearTimeout(timeOut) } if (applicationForm.addEventListener("submit", e => { e.preventDefault(), applicationFormCheck() }), callbackForm.addEventListener("submit", e => { e.preventDefault(), callbackFormCheck() }), faqForm && faqForm.addEventListener("submit", e => { e.preventDefault(), faqFormCheck() }), order && (orderForm.addEventListener("submit", e => { e.preventDefault(), orderFormCheck() }), orderQuantityInput.addEventListener("input", () => { setValueCountInput(0) }), incQuantity.addEventListener("click", increase), decQuantity.addEventListener("click", decrease)), mobileMenuOpenBtn.addEventListener("click", openMobileMenu), mobileMenuCloseBtn.addEventListener("click", closeMobileMenu), mainCarousel && mainSlider(mainCarousel, !0), reviews && (setHeightreviewSlide(), mainSlider(reviews), window.addEventListener(`resize`, () => { setHeightreviewSlide() }, !1)), slider) { const f = slider.querySelector("#slidesWrap"), g = slider.querySelectorAll(".slider__item"); let i = !1, s = getIndexActiveEl(g, "slider__item--is-active"); const j = slider.querySelectorAll(".slider__dot"), k = slider.querySelector("#fullPic"), l = slider.querySelectorAll(".full-pic__item"), m = slider.querySelectorAll(".full-pic__close"); f.addEventListener("transitionend", movingEvent); const n = k.querySelectorAll(".full-pic__play"), o = slider.querySelector("#prevSlide"), p = slider.querySelector("#nextSlide"), q = slider.querySelector("#fullPicPrev"), r = slider.querySelector("#fullPicNext"); function setCurrentSlide() { const e = document.querySelector("#currentSlide"); e.innerHTML = s + 1 } function setTotalSlides() { const e = slider.querySelector("#totalSlide"); e.innerHTML = g.length } function getIndexActiveEl(e, o) { let r = 0; return Array.from(e).forEach((e, t) => { e.classList.contains(o) && (r = t) }), r } function setActiveEl(e, t, o) { Array.from(e).forEach(e => { e.classList.remove(o) }), e[t].classList.add(o), setCurrentSlide() } function prevSlide() { var e = g[1].offsetWidth, t = f.getBoundingClientRect(), o = slider.getBoundingClientRect(); t.left >= o.left || i || (i = !0, --s, setActiveEl(g, s, "slider__item--is-active"), f.style.left = parseInt(getComputedStyle(f).left, 10) + e + "px", setActiveEl(j, s, "slider__dot--is-activ"), moveDots()) } function nextSlide() { var e = g[1].offsetWidth; s + 1 >= g.length || i || (i = !0, s += 1, setActiveEl(g, s, "slider__item--is-active"), f.style.left = parseInt(getComputedStyle(f).left, 10) - e + "px", setActiveEl(j, s, "slider__dot--is-activ"), moveDots()) } function dotsManagement(e) { var t = e * g[1].offsetWidth; s = parseInt(e), setActiveEl(j, e, "slider__dot--is-activ"), setActiveEl(g, e, "slider__item--is-active"), f.style.left = -t + "px", moveDots() } function movingEvent() { i = !1 } function moveDots() { var e = j[0].offsetWidth, t = getComputedStyle(j[0]).marginRight, t = e + parseInt(t), t = (s - 1) * t; const o = slider.querySelector("#sliderDotsWrap"); s < 1 || j.length - 2 < s || (o.style.left = -t + "px") } function showFullPicSlider(e) { k.classList.add("full-pic--is-active"), showCurrentFullPic(e) } function closeFullPicSlider() { k.classList.remove("full-pic--is-active"), Array.from(l).forEach(e => { e.classList.remove("full-pic__item--is-active"), e.querySelector("video") && e.querySelector("video").pause() }) } function showCurrentFullPic(e) { Array.from(l).forEach(e => { e.classList.remove("full-pic__item--is-active"), e.querySelector("video") && e.querySelector("video").pause() }), l[e].classList.add("full-pic__item--is-active") } setCurrentSlide(), setTotalSlides(), setBgModalHeight(k), window.addEventListener(`resize`, () => { setBgModalHeight(k) }, !1), o.addEventListener("click", prevSlide), p.addEventListener("click", nextSlide), q.addEventListener("click", prevSlide), r.addEventListener("click", nextSlide), f.addEventListener("touchstart", function (e) { startTouchMove(e) }), f.addEventListener("touchmove", function (e) { touchMove(e) }), f.addEventListener("touchend", function () { touchEnd(nextSlide, prevSlide) }), Array.from(j).forEach((e, t) => { e.addEventListener("click", () => { dotsManagement(t) }) }), Array.from(g).forEach((e, t) => { e.addEventListener("click", () => { showFullPicSlider(t) }) }), Array.from(m).forEach(e => { e.addEventListener("click", closeFullPicSlider) }), document.addEventListener("keydown", e => { e.keyCode == KEY_ESC && closeFullPicSlider() }), q.addEventListener("click", () => { showCurrentFullPic(s) }), r.addEventListener("click", () => { showCurrentFullPic(s) }), Array.from(n).forEach(e => { e.addEventListener("click", () => { playMovie(e) }) }), Array.from(l).forEach(e => { const t = e.querySelector("video"); t && t.addEventListener("click", () => { stopMovie(t) }) }) } function mainSlider(t, e) { let o = t.querySelectorAll(".main-slider__item"); var r = o.length - 1; const i = t.querySelector(".main-slider__next"), l = t.querySelector(".main-slider__prev"); function n() { let e = t.querySelectorAll(".main-slider__item"); e[0].classList.remove("main-slider__item--is-right"), e[0].classList.add("main-slider__item--is-active"), e[1].classList.remove("main-slider__item--is-active"), setTimeout(() => { e[r].classList.add("main-slider__item--is-right"), e[0].before(e[r]) }, 200) } function s() { let e = t.querySelectorAll(".main-slider__item"); e[1].classList.remove("main-slider__item--is-active"), e[1].classList.add("main-slider__item--is-right"), e[2].classList.add("main-slider__item--is-active"), setTimeout(() => { e[0].classList.remove("main-slider__item--is-right"), e[r].after(e[0]) }, 200) } o[0].classList.add("main-slider__item--is-active"), o[r].classList.add("main-slider__item--is-right"), o[0].before(o[r]), i && i.addEventListener("click", s), l && l.addEventListener("click", n), t.addEventListener("touchstart", function (e) { startTouchMove(e) }), t.addEventListener("touchmove", function (e) { touchMove(e) }), t.addEventListener("touchend", function () { touchEnd(s, n) }), e && (e = 1e3 * +t.getAttribute("data-interval"), setInterval(() => { s() }, e)) } function playMovie(e) { const t = e.closest(".full-pic__item"), o = t.querySelector("video"); e.classList.add("full-pic__play--is-hide"), o.play() } function stopMovie(e) { const t = e.closest(".full-pic__item"), o = t.querySelector(".full-pic__play"); o.classList.remove("full-pic__play--is-hide"), e.pause() } function startTouchMove(e) { touchStart = e.changedTouches[0].clientX, touchPosition = touchStart } function touchMove(e) { touchPosition = e.changedTouches[0].clientX } function touchEnd(e, t) { var o = touchStart - touchPosition; 0 < o && o >= sensitivity && e(), o < 0 && -1 * o >= sensitivity && t() } function setBgModalHeight(e) { e.style.height = window.innerHeight + "px" } function showFaqModal() { const e = faqForm.querySelector("#questInput"), t = faqForm.querySelector("#faqFormError"); var o = e.value.trim(); if (t.classList.remove("error--is-show"), !o) return t.classList.add("error--is-show"), void (e.value = ""); faqModal.classList.add("modal--is-show") } function closeFaqModal() { faqModal.classList.remove("modal--is-show") } function callbackModalOpen() { callbackFormModal.classList.add("callback-form__wrap--is-show") } function callbackModalClose() { callbackFormModal.classList.remove("callback-form__wrap--is-show") } function showModal(e) { bgModal.classList.add("shading--is-show"), e.classList.add("modal--is-show"), body.classList.add("is-no-scroll") } function closeModal(e) { const t = e.closest(".modal"); t.classList.remove("modal--is-show"), bgModal.classList.remove("shading--is-show"), body.classList.remove("is-no-scroll") } function openMobileMenu() { mobileMenu.classList.add("mobile-menu--is-open") } function closeMobileMenu() { mobileMenu.classList.remove("mobile-menu--is-open") } function slow(e) { const t = e.closest(".dropdown-wrap"), o = t.querySelector(".press-to-show"), r = t.querySelector(".dropdown"); e = t.querySelector(".hidden-el"); const i = t.querySelector(".arrow-show"); e = e.clientHeight; if (r.classList.contains("dropdown--is-show")) return r.style.height = "0px", r.classList.remove("dropdown--is-show"), i.classList.remove("arrow-up"), t.classList.remove("is-active"), void o.classList.remove("is-active"); r.style.height = e + "px", r.classList.add("dropdown--is-show"), i.classList.add("arrow-up"), t.classList.add("is-active"), o.classList.add("is-active") } function adaptDropdownsHeight() { Array.from(dropdownWraps).forEach(e => { const t = e.querySelector(".dropdown"); e = t.querySelector(".hidden-el"); t.classList.contains("dropdown--is-show") && (e = e.clientHeight, t.style.height = e + "px") }) } function setValueCountInput(e) { const t = orderForm.querySelector("#orderPrice"); var o = +t.getAttribute("data-price"), r = +orderQuantityInput.value; if (r < 0 || isNaN(r)) return orderQuantityInput.value = e, void (t.innerHTML = totalPrice(o, e).toLocaleString()); t.innerHTML = totalPrice(o, r).toLocaleString() } function applicationFormCheck() { hideErrorMessages(applicationForm), applicationInputsCheck() } function applicationInputsCheck() { const e = applicationForm.querySelector(".phone"); var t = applicationForm.querySelectorAll("input"), o = regexСheck(applicationForm.querySelector("#applicationTel").value, regTel); isEmptyValue(t, applicationForm) || (o ? applicationFormSend() : e.classList.add("error--is-show")) } function applicationFormSend() { var e = new FormData(applicationForm); const t = new XMLHttpRequest; t.open("POST", applicationForm.action), t.send(e), t.onload = function () { 200 != t.status ? (noSend(applicationForm), console.log("Ошибка: " + t.status)) : 1 == JSON.parse(t.response) ? (applicationThanks.classList.add("modal--is-show"), applicationModal.classList.remove("modal--is-show"), clearInputs(inputs), console.log("Форма отправилась")) : (noSend(applicationForm), console.log("Неудачная отправка")) }, t.onerror = function () { console.log("Неудачная отправка") } } function callbackFormCheck() { hideErrorMessages(callbackForm), callbackInputsCheck() } function callbackInputsCheck() { valueCheck(callbackForm.querySelectorAll("input"), callbackForm) && callbackFormSend() } function callbackFormSend() { var e = new FormData(callbackForm); const t = new XMLHttpRequest; t.open("POST", callbackForm.action), t.send(e), t.onload = function () { 200 != t.status ? (noSend(callbackForm), console.log("Ошибка: " + t.status)) : 1 == JSON.parse(t.response) ? (bgModal.classList.add("shading--is-show"), applicationThanks.classList.add("modal--is-show"), callbackFormModal.classList.remove("callback-form__wrap--is-show"), console.log("Форма отправилась"), clearInputs(inputs)) : (noSend(callbackForm), console.log("Неудачная отправка")) }, t.onerror = function () { console.log("Неудачная отправка") } } function faqFormCheck() { hideErrorMessages(faqForm), faqInputsCheck() } function faqInputsCheck() { const e = faqForm.querySelector(".mail"); var t = faqForm.querySelectorAll("input"), o = regexСheck(faqForm.querySelector("#faqMail").value, regMail); isEmptyValue(t, faqForm) || (o ? faqFormSend() : e.classList.add("error--is-show")) } function faqFormSend() { var e = new FormData(faqForm); const t = new XMLHttpRequest; t.open("POST", faqForm.action), t.send(e), t.onload = function () { if (200 != t.status) noSend(faqForm), console.log("Ошибка: " + t.status); else if (1 == JSON.parse(t.response)) { const e = bgModal.querySelector("#faqThanks"); bgModal.classList.add("shading--is-show"), e.classList.add("modal--is-show"), faqModal.classList.remove("modal--is-show"), clearInputs(inputs), console.log("Форма отправилась") } else noSend(faqForm), console.log("Неудачная отправка") }, t.onerror = function () { console.log("Неудачная отправка") } } function orderFormCheck() { hideErrorMessages(orderForm), orderInputsCheck() } function orderInputsCheck() { const e = orderForm.querySelector("#mailOrTel"); var o = orderForm.querySelectorAll(".input"); const t = orderForm.querySelector("#errorMail"), r = orderForm.querySelector("#errorTel"), i = orderForm.querySelector("#inputMail"), l = orderForm.querySelector("#inputTel"); var n = i.value.trim(), s = l.value.trim(), a = regexСheck(n, regMail), c = regexСheck(s, regTel); let d = !0; a || n && (t.classList.add("error--is-show"), d = !1), c || s && (r.classList.add("error--is-show"), d = !1), n || s || (e.classList.add("error--is-show"), d = !1), d && function () { const e = new FormData(orderForm), t = new XMLHttpRequest; t.open("POST", orderForm.action), t.send(e), t.onload = function () { 200 != t.status ? (noSend(orderForm), console.log("Ошибка: " + t.status)) : 1 == JSON.parse(t.response) ? (order.classList.remove("modal--is-show"), applicationThanks.classList.add("modal--is-show"), console.log("Форма отправилась"), clearInputs(o)) : (noSend(orderForm), console.log("Неудачная отправка")) }, t.onerror = function () { console.log("Неудачная отправка") } }() } function noSend(e) { const t = e.querySelector(".no-send"); t.classList.add("error--is-show") } function isEmptyValue(e, t) { const o = t.querySelector(".empty"); let r = !1; return Array.from(e).forEach(e => { e.value.trim() || (o.classList.add("error--is-show"), r = !0) }), r } function regexСheck(e, t) { return t.test(e) } function hideErrorMessages(e) { e = e.querySelectorAll(".error"); Array.from(e).forEach(e => { e.classList.remove("error--is-show") }) } function valueCheck(e, t) { const o = t.querySelector(".phone"), r = t.querySelector(".mail"); let i = !0; return Array.from(e).forEach(e => { switch (e.getAttribute("data-type")) { case "tel": var t = e.value; i = i && regexСheck(t, regTel), i || o.classList.add("error--is-show"); break; case "name": i = !0; break; case "email": t = e.value; i = i && regexСheck(t, regMail), i || r.classList.add("error--is-show") } }), i } function clearInputs(e) { Array.from(e).forEach(e => { "submit" !== e.type && (e.value = "") }) } setBgModalHeight(bgModal), window.addEventListener(`resize`, () => { setBgModalHeight(bgModal), adaptDropdownsHeight() }, !1), faqModal && window.addEventListener(`resize`, () => { setBgModalHeight(faqModal) }, !1), application.addEventListener("click", () => { showModal(applicationModal) }), Array.from(orderBtns).forEach(e => { e.addEventListener("click", () => { showModal(order) }) }), Array.from(closeBtn).forEach(e => { e.addEventListener("click", () => { closeModal(e) }) }), callbackOpenBtn.addEventListener("click", callbackModalOpen), Array.from(callbackClose).forEach(e => { e.addEventListener("click", callbackModalClose) }), faqModal && (setBgModalHeight(faqModal), window.addEventListener(`resize`, () => { setBgModalHeight(faqModal) }, !1), faqFormBtn.addEventListener("click", e => { e.preventDefault(), showFaqModal() })), Array.from(closeFaqBtns).forEach(e => { e.addEventListener("click", () => { closeFaqModal() }) }), document.onclick = function (e) { const t = e.target; t.closest(".press-to-show") && slow(t) }; const yandexmap = document.querySelector("#yandexmap"); if (yandexmap) { let e, t; const kc = yandexmap.getAttribute("data-coord"), lc = kc.split(","); function initMap() { e = new ymaps.Map("yandexmap", { center: lc, zoom: 16 }), t = new ymaps.Placemark(lc, { hintContent: "Расположение", balloonContent: "Это наша организация" }), e.geoObjects.add(t) } ymaps.ready(initMap) } function getWidthEl(e) { return e.clientWidth } function showSearch() { mobileSearchWrap.classList.toggle("search-mobile--is-hide") } function changePosition() { var e = mainBg.getBoundingClientRect(); footer.getBoundingClientRect().y <= e.height ? mainBg.classList.add("main-bg--absolute") : mainBg.classList.remove("main-bg--absolute") } function showUp() { body.getBoundingClientRect().top < -1e3 ? up.classList.add("up--is-show") : up.classList.remove("up--is-show") } function increase() { var e = +orderPrice.getAttribute("data-price"), t = +orderQuantityInput.value + 1; orderQuantityInput.value = t, orderPrice.innerHTML = totalPrice(e, t).toLocaleString() } function decrease() { var e = +orderPrice.getAttribute("data-price"), t = +orderQuantityInput.value - 1; orderQuantityInput.value = t, orderQuantityInput.value < 1 ? setValueCountInput(1) : orderPrice.innerHTML = totalPrice(e, t).toLocaleString() } function setHeightreviewSlide() { const e = reviews.querySelector(".review__slider"); var t = reviews.querySelector(".review__slide").offsetHeight; e.style.height = t + "px" } function totalPrice(e, t) { return e * t }